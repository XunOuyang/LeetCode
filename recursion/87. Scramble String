// This is a very typical recursion problem. We should have this type of instinct when we saw this problem.

class Solution {
public:
    bool isScramble(string s1, string s2) {
        if(s1 == s2)
            return true;
        if(s1.size() != s2.size())
            return false;
        int size = s1.size();
        int m[26] = {0};
        for(int i=0; i<size; i++) {
            m[s1[i]-'a']++;
            m[s2[i]-'a']--;
        }
        for(int i=0; i<26; i++)
        {
            if(m[i]!=0)
                return false;
        }
        for(int i=1; i<=size-1; i++)
        {
            if(isScramble(s1.substr(0, i), s2.substr(0, i)) && isScramble(s1.substr(i), s2.substr(i)))
                return true;
            if(isScramble(s1.substr(0, i), s2.substr(size-i)) && isScramble(s1.substr(i), s2.substr(0, size-i)))
                return true;
        }
        return false;
    }
};
