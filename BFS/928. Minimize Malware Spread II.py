"""
https://buptwc.com/2018/10/21/Leetcode-928-Minimize-Malware-Spread-II/
"""

class Solution(object):
    def minMalwareSpread(self, graph, initial):
        """
        :type graph: List[List[int]]
        :type initial: List[int]
        :rtype: int
        """
        """
        We will create a dictionary, key is the node index, and the value is the initial node
        Be very careful about the meaning of each variables.
        """
        d = collections.defaultdict(list)
        for init in initial:
            q = collections.deque()
            q.append(init)
            visited = set(initial)
            while q:
                infected = q.popleft()
                for i in range(len(graph[node])):
                    if graph[infected][i] == 0:
                        continue
                    elif i in visited:
                        continue
                    visited.add(i)
                    d[i].append(init)
                    q.append(i)
        res = [0]*len(graph)
        for key in d:
            if len(d[key]) == 1:
                res[d[key][0]] += 1
        if max(res) == 0:
            return min(initial)
        return res.index(max(res))
